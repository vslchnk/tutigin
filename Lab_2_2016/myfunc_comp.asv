function [ f, C0, C, Cab, Sab, y, CKO_proc] = myfunc_comp ( N, M, T, kp)            
    C0=0;    
    for i=1:N+1 %генерация модельной функции       
        t=2*pi*(i-1)/N;    
        f(i)=sin(2*pi*kp*(i-1)/N); % гармоническая функция  
    end

    C0=C0*(2/N);
    for k=1:M
       C(k)=0; 
    end
    
    for i=1:N+1
        for k=1:M
        C(k)=C(k)+f(i)*exp(-j*2*pi*k*(i-1)/N);     
        end
    end
    
    for k=1:M
        C(k)=C(k)*(2/N);
    end 
    
    for k=1:M 
        Cab(k)=abs(C(k));%коэффициенты Cab(k)- комплексные числа вида a+jb,     
    end
    k=1:M;
    figure 
    plot(k,Cab);
    stem(Cab(1:M)); %вывод графика  дискретной последовательности данных
    axis([1 8 -0.2 1.2]);%задание осей: [xmin xmax ymin ymax]
    title('Амплитуды частотных составляющих спектра');
    xlabel('Количество периодов')
    axis tight;
    %Вычисление и отображение спектра амплитуд (конец) 
    for i=1:N+1
        y(i)=0;
        %f3(i)=0;
        for k=1:M    
        y(i)=y(i)+C(k)*exp(j*2*pi*k*(i-1)/N);   
        end
        y(i)=C0/2+y(i);
    end

    %отображение исходного и восстановленного сигналов
    i=1:N+1;
    figure
    plot(i,f);
    axis tight;
    title('Исходная и восстановленная функция')
    xlabel('Номер элемента массива')
    hold on;
    plot(i,real(y),'r-');
    axis tight;
    hold off;
    %вычисление погрешности восстановления 
    for i=1:N+1
       DZ(i)=abs(f(i)-real(y(i)));    
    end  
    DZ1=DZ/max(f)*100;
    SKO=std(DZ1)
    pause;
    close all;
    clear;
end

