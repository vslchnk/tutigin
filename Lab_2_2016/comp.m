%Разложение функции t^p в комплексный ряд Фурье
%в дискретизированном виде на интервале [0,T]
%Восстановление функции производится по формуле
% fв(i)=y(i)=sum(c(k)*exp(j*2*pi*0*i/N)), k=[1,M],  i= [0,N-1]
%Чем больше М, тем точнее восстановление

clear all;
T=pi;%Значение T (произвольное)
N=1024;%количество значений функции на интервале [0,T]
M=128;%количество членов ряда Фурье
%p=1;%показатель степени функции x^p 
kp=4.1;%количество периодов гармонического сигнала
C0=0;


counter = 1;
for i=1:N+1 %генерация модельной функции
   %f(i)=sin(2*pi*kp*(i-1)/N); % гармоническая функция  
    % f(i)= (T*(((i-1))/N))^p; %функция t^p  
    
    
    % Заранее не знаем количесво N
    t=2*pi*(i-1)/N;    
    x(i)=2*cos(kp * t / 2);
    
    if(x(i) > 0)
        f(counter) = log(x(i));
        C0=C0+f(counter);
        counter = counter + 1;        
    end          
end

%ПОЧЕМУ?
N = counter - 2;





C0=C0*(2/N);
for k=1:M
   C(k)=0; 
end   
for i=1:N+1
    for k=1:M
    C(k)=C(k)+f(i)*exp(-j*2*pi*k*(i-1)/N);     
    end
end
for k=1:M
C(k)=C(k)*(2/N);
end 
%Вычисление и отображение спектра амплитуд (начало)
for k=1:M 
Cab(k)=abs(C(k));%коэффициенты Cab(k)- комплексные числа вида a+jb, 
%функция abs вычисляет sqrt(a^2+b^2 )
end
k=1:M;
figure 
plot(k,Cab);
stem(Cab(1:M)); %вывод графика  дискретной последовательности данных
axis([1 8 -0.2 1.2]);%задание осей: [xmin xmax ymin ymax]
title('Амплитуды частотных составляющих спектра');
xlabel('Количество периодов')
axis tight;
%Вычисление и отображение спектра амплитуд (конец) 
for i=1:N+1
    y(i)=0;
    %f3(i)=0;
    for k=1:M    
    y(i)=y(i)+C(k)*exp(j*2*pi*k*(i-1)/N);   
    end
    y(i)=C0/2+y(i);
end

%отображение исходного и восстановленного сигналов
i=1:N+1;
figure
plot(i,f);
axis tight;
title('Исходная и восстановленная функция')
xlabel('Номер элемента массива')
hold on;
plot(i,real(y),'r-');
axis tight;
hold off;
%вычисление погрешности восстановления 
for i=1:N+1
   DZ(i)=abs(f(i)-real(y(i)));    
end  
DZ1=DZ/max(f)*100;
SKO=std(DZ1)
pause;
close all;
clear;
