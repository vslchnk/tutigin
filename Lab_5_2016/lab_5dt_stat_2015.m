%Программа определения времени задержки радиоимпульса
%Используется сочетание приближенного определения времени задержки 
%по сдвигу максимума радиоимпульса с вычислением функции коэффициентов
%корреляции радиоимпульса с серией эталонных сигналов,передискретизацией,
%нахождением максимума этой функции,итерационным процессом вычисления.

sp=100;%кол-во отсчетов за период несущей частоты радиоимпульса
kt=1024;%количество отсчетов принимаемого сигнала
shift=311;%задержка радиоимпульса
h=120;%полуширина радиоимпульса
shum=0.1;%уровень шума в долях СКО

for i4=1:2048
shift=311;% точное значение временной задержки, в каждом цикле нужно обновлять    
for i=1:kt
    y(i)=0;
    sy(i)=0;
    w(i)=0;
    w1(i)=0;
end
 
%ПРОГРАММНАЯ ГЕНЕРАЦИЯ СИГНАЛА
      noise=randn(kt);
      for i=1:kt %генерация оконной функции
        if(i>(shift-h)&(i<=shift+h))                            
              w(i)=1-abs(i-shift)/h;%окно Барлетта(треугольное) 
             % w(i)=0.5*(1+cos(pi*(i-shift)/h));%окно Хеннинга 
             % w(i)=0.54+0.46*cos(pi*(i-shift)/h);%окно Хемминга
             % w(i)=exp(-0.0003*(i-shift)^2.0); %экспоненциальное окно
        end          
      end
     for i=1:kt  %генерация задержанного радиоимпульса                
          y(i)=w(i)*cos(2*3.14*(i-shift)/sp);  
          y(i)=y(i)+shum*noise(i);
     end

%нахождение макс. знач. y[i] массива Y
C=max(y);
%нахождение номера элемента  массива Y, соответствующего макс. знач. y[i]
for i=1:kt    
    if (y(i)==C)           
        shiftmax=i-1; 
        shiftmax2=i; 
        break
    end
end 
if(shiftmax<0)|(shiftmax>=550000) 
    dt_int=shiftmax;      
else       
    dt=shiftmax; 
    dt_ma=dt;%оценка величины сдвига методом максимума амплитуды
    search_area=h/(2*dt); %область поиска   
   
   for ki=1:3 %Цикл определяет количество итераций
        shagkor=dt*search_area/3;
        k=0;       
        dt1=dt-dt*search_area;
        dt2=dt+dt*search_area;
        %диапазон сдвигов должен быть ограничен - от 0 до 800
        if (dt1<0) dt1=0;end;
        if (dt2>800) dt2=800; end;   
        for iii=dt1:shagkor:dt2 %цикл для создания 6 эталонов в окрестности 
            %приближенного значения сдвига, определенного по МАХ амплитуды.           
            k=k+1;
            xkor(k)=iii;
            shift1=iii;
            kor(k)=0;
            for i=1:kt           
                x(i)=0;    
            end
         %Вычисление массива эталонного радиоимпульса X               
     for i=1:kt %генерация оконной функции для эталонного радиоимпульса
          if(i>(shift1-h)&(i<=shift1+h))                            
              w1(i)=1-abs(i-shift1)/h;%окно Барлетта(треугольное) 
             % w1(i)=0.5*(1+cos(pi*(i-shift1)/h));%окно Хеннинга 
             % w1(i)=0.54+0.46*cos(pi*(i-shift1)/h);%окно Хемминга
             % w1(i)=exp(-0.0003*(i-shift1)^2.0); %экспоненциальное окно
        end          
  
     end    
     for i=1:kt  %генерация эталонного радиоимпульса                          
          x(i)=w1(i)*cos(2*3.14*(i-(shift1))/sp); 
     end
     
%вычисление средних значений X и Y
            x_sr=mean(x);
            y_sr=mean(y);
            x_sko=0;
            y_sko=0;
            kor1(k)=0;%%начальное значение суммы модулей суммы
            kor(k)=0;
%вычисление СКО и коэффициента корреляции X и Y
            for i=1:kt
%                 x_sko=x_sko+(x(i)-x_sr)*(x(i)-x_sr);
%                 y_sko=y_sko+(y(i)-y_sr)*(y(i)-y_sr);
%                 kor(k)=kor(k)+(x(i)-x_sr)*(y(i)-y_sr);
                sxy(i)=(abs(x(i)-y(i)));%вычисление нормы Минковского !
                kor1(k)=kor1(k)+sxy(i);%вычисление нормы Минковского !
            end 
           % kor(k)=kor(k)/(sqrt(x_sko*y_sko));
           kor(k)=kor1(k);
        end        
        xx=1:k;
        xi=1:0.1:k;         
        yint=interp1(xx,kor,xi,'spline');% сплайн-интерполяция коэф корреляции             
        r1=kor;       
        %следующие 5 строк - отображение графика коэф. корреляции от сдвига эталонов
        %график получен с помощью ф-и сплайн-аппроксимации spaps
        apr=spaps(xkor,kor,0.000001);
        cmax=min(yint); %нахождение минимума коэф. Минковского
       % cmax=max(yint); %нахождение максимума коэф.корр./ковар./Поддорогина
        for i=1:round((k-1)/0.1+1)
            if (yint(i)==cmax)     
                dt_int=dt-dt*search_area+(i-1)*shagkor/10; %уточненное значение врем.задержки по МАХ функции коэф. корр.
            end           
        end 
        dt=dt_int;
        search_area=search_area/2;        
   end
end
 dtt(i4)=dt;
 dttma(i4)=dt_ma;
end
  SKO_AKM=std(dtt)
  SKO_AKM_persent=SKO_AKM/shift*100
  figure
  hist(dtt,7); %построение итоговой гистограммы для АКМ
  title('AKM');
  SKO_MA=std(dttma)
  SKO_MA_persent=SKO_MA/shift*100
  figure
  hist(dttma,7); %построение итоговой гистограммы для МА
  title('MA')
pause;
close all; %закрытие окон графического вывода
clear; %очистка Workspace

