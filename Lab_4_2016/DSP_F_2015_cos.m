%Комбинированное использование ключевых операций ЦОС
%Для повышения точности определения количества периодов
%"короткого" эхо-сигнала используется комбинация
%БПФ, сплайн-аппроксимации,передискретизации
%в качестве признака степени сходства исходного и эталонного сигналов 
%могут использоваться: коэффициент ковариации, коэффициент корреляции,
%сумма модулей разности (норма Минковского),
%сумма модулей суммы сигналов (норма Поддорогина)
clear;
clc;
kt=1024; % количество отсчетов
Q=0.2;%шум
kp=4.31;%количество периодов сигнала
cp=kp/2;%положение центра эхо-сигнала

%for i2=1:1
%1. ГЕНЕРАЦИЯ МОДЕЛЬНОГО СИГНАЛА
for i=1:kt %обнуление массива сигнала
    y(i)=0;
end 
noise=randn(kt);
for i=1:kt %генерация модельного сигнала с экспоненциальной модуляцией
    w(i)=exp(-20*(((i-cp)/kt)^2));
    y(i)=cos(2*pi*kp*(i-cp)/kt)*w(i);
    y(i)=y(i)+Q*noise(i);   
end
% i=1:kt; %отображение модельного сигнала во временной области
% figure
% plot(i,y(i));
% axis tight;
% title('Time domain')
% xlabel('Sample number')
%2. ФУНКЦИОНАЛЬНОЕ ПРЕОБРАЗОВАНИЕ (БПФ)
bpfy=fft(y,kt);%БПФ
bpf=bpfy.*conj(bpfy)/kt;%БПФ
%нахождение макс. знач. функции БПФ для массива Y
C=max(bpf);
for i=1:kt %поиск количества периодов, соответствующих максимуму БПФ
    if (bpf(i)==C)          
        kpbpf=(i-1);         
        break
    end
end
kp_bpf=kpbpf;
%3. СОЗДАНИЕ ЭТАЛОНОВ И КРОССКОРРЕЛЯЦИЯ
kp1=kpbpf;
search_area=0.3;%область поиска относительно kp_bpf   
for ki=1:3 %количество итераций    
shagkor=kp1*search_area/3;%шаг поиска
        k=0;
  for j=kp1-kp1*search_area:shagkor:kp1+kp1*search_area %цикл для создания 6 эталонов в окрестности приближенного 
            %значения количества периодов, определенных с помощью БПФ.           
            k=k+1;
             xkor(k)=j;
            kor(k)=0;
            for i=1:kt           
                x(i)=0;    
            end 
%Вычисление массивов эталонных сигналов              
        for i=1:kt                                                
           x(i)=cos(2*pi*j*(i-cp)/kt)*w(i);
        end    
%вычисление средних значений модельного и эталонных сигналов
            x_sr=mean(x);
            y_sr=mean(y);
            x_sko=0;
            y_sko=0; 
            kor1(k)=0;%%начальное значение суммы модулей суммы
%вычисление  НОРМЫ модельного и эталонных сигналов
            for i=1:kt
                x_sko=x_sko+(x(i)-x_sr)*(x(i)-x_sr);%если используется коэф.корр
                y_sko=y_sko+(y(i)-y_sr)*(y(i)-y_sr);%если используется коэф.корр
                kor(k)=kor(k)+(x(i)-x_sr)*(y(i)-y_sr);%если используется коэф.корр
%                 sxy(i)=abs(x(i)+y(i));%вычисление модуля суммы(если используется модуль суммы)
%                 kor1(k)=kor1(k)+sxy(i); %вычисление суммы модулей суммы(если используется модуль суммы)                                 
            end  
            kor(k)=kor(k)/(sqrt(x_sko*y_sko));%если используется коэф.корр
            kor1(k)=kor(k);%если используется коэф.корр
  end %конец цикла создания эталонов и вычисления массива коэф. корр.
  %СПЛАЙН-АППРОКСИМАЦИЯ И ПЕРЕДИСКРЕТИЗАЦИЯ
        xx=1:k;
        xi=1:0.1:k;          
        yint=interp1(xx,kor1,xi,'spline');% сплайн-аппроксимация коэф корреляции               
        r1=kor1;       
        apr=spaps(xkor,kor1,0.000001);
        figure
         fnplt(apr)
         hold on
         plot(xkor,r1,'ro')
         hold off  
%НАХОЖДЕНИЕ УТОЧНЕННОГО ЗНАЧЕНИЯ КОЛИЧЕСТВА ПЕРИОДОВ СИГНАЛА
        cmax=max(yint); %нахождение максимума коэф. корр.       
        for i=1:round((k-1)/0.1+1)
            if (yint(i)==cmax)     
                kp_int=kp1-kp1*search_area+(i-1)*shagkor/10; %уточненное значение частоты по МАХ функции коэф. корр.
            end           
        end
        search_area=search_area/2;
        kp1=kp_int;
end
result=kp1
%kp2(i2)=kp1;
%end
 pause;
close all;
clear;

      