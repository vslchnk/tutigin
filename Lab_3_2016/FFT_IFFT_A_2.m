%БПФ - ОБПФ
A=1;%Амплитуда первого сигнала
B=1; %Амплитуда второго сигнала
Q=0.1;%СКО шума
N=1024;
kp1=50;%количество периодов 1-го сигнала
kp2=120;%количество периодов 2-го сигнала


% Сумма сигналов 1 и 2
for i=1:N
%x(i)=A*exp(-0.0003*(i-200)^2.0);
x(i) = A*sin(2*pi*kp1*i/N) + B*sin(2*pi*kp2*i/N);
%x(i)=0; % сигнал прямоугольной формы
 %if (i>100)&(i<300) % сигнал прямоугольной формы
  %  x(i)=A;
 %end   
z(i)=Q*randn(size(N));
y(i) = x(i) + z(i);     % Сигнал+шум
end
Y = fft(y,N)/N;%вычисление спектра сигнала с шумом
i=1:N/2;
figure
%plot(i,2*abs(Y(1:N/2)));
semilogy(i,2*abs(Y(1:N/2)));
title('Спектр сигнала с шумом y(f)')
for i=1:N %"вырезание" спектральных составляющих шума
if (i>125)|(i<40)|((i>55)&(i<110))
    Y(i)=0;
end 
end

i=1:N/2;
figure
%plot(i,2*abs(Y(1:N/2)));
semilogy(i,2*abs(Y(1:N/2)));
title('Односторонний амплитудный спектр Y(f)')
xlabel('Частота (Гц)')
ylabel('|Y(i)|')

%восстановление исходного сигнала после "вырезания"
%спектральных составляющих шума
z=ifft(Y)*2*N; 
% i=1:N;
% figure
% plot(i,x(1:N));
% title('Исходный сигнал x(i)')
% axis tight;
% figure
% plot(i,y(1:N));
% title('Сигнал y(i), искаженный шумом')
% xlabel('номер отсчета')

figure
plot(i,real(z(1:N)));
title('Восстановленный сигнал z(i)')
axis tight;
% for i=1:N
% DZ(i)=x(i)-real(z(i));%уровень зашумления в сигнале после фильтра
% %результат обратного преобразования Фурье - массив комплексных чисел
% %Восстановленный сигнал - действительные части комплексных чисел
% %Вычисляются с помощью функции real
% end
% DZ1=DZ*100/max(x);
% SKO=std(DZ1)
% 
% figure
% i=1:N;
% plot(i,DZ1(i:N)); %вывод погрешности отфильтрованного сигнала
% title('Погрешность отфильтрованного сигнала');
% ylabel('Случайная погрешность, %'); % подпись по оси Y
% axis tight;

pause;
close all; %закрытие всех окон графического вывода

